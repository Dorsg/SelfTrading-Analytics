volumes:
  pg_data_dev:
    name: selftrading_analytics_pg_data_dev

services:
  db:
    image: postgres:15
    container_name: analytics-db-dev
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"  # Expose for development access
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-selftrading_analytics_db}
      APP_USER_PASSWORD: ${DB_PASSWORD}
    command:
      - "postgres"
      - "-c"
      - "max_connections=30"
      - "-c"
      - "shared_buffers=128MB"
      - "-c"
      - "work_mem=4MB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "wal_buffers=8MB"
      - "-c"
      - "effective_cache_size=512MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "tcp_keepalives_idle=60"
      - "-c"
      - "tcp_keepalives_interval=10"
      - "-c"
      - "tcp_keepalives_count=6"
      - "-c"
      - "log_min_duration_statement=1000"
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"
      - "-c"
      - "log_statement=ddl"
      - "-c"
      - "log_checkpoints=on"
      - "-c"
      - "log_lock_waits=on"
      - "-c"
      - "log_temp_files=0"
      - "-c"
      - "log_autovacuum_min_duration=0"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=/var/log/postgresql"
      - "-c"
      - "log_filename=postgresql-%Y-%m-%d_%H%M%S.log"
      - "-c"
      - "log_rotation_age=1d"
      - "-c"
      - "log_rotation_size=100MB"
      - "-c"
      - "log_truncate_on_rotation=on"
      - "-c"
      - "restart_after_crash=on"
      - "-c"
      - "max_wal_size=1GB"
      - "-c"
      - "min_wal_size=80MB"
    mem_limit: 1g
    shm_size: 256m
    stop_grace_period: 60s
    volumes:
      - pg_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/00-init-db.sql:ro
      - ./scripts/10-init-app-user.sh:/docker-entrypoint-initdb.d/10-init-app-user.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} && psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 45s

  db-init-tables:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: analytics-db-init-tables-dev
    restart: "no"
    env_file: .env
    environment:

      DB_ALLOW_AUTO_CREATE_DB: "true"
      DB_ALLOW_AUTO_CREATE_TABLES: "true"
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["python", "-m", "backend.database.init_db"]

  import-historical-bars:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: analytics-import-historical-bars_dev
    restart: "no"
    env_file: .env
    environment:

      ANALYTICS_SQLITE_PATH: /app/tools/finnhub_downloader/data/daily_bars.sqlite
    volumes:
      - ./logs:/app/logs
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      db-init-tables:
        condition: service_completed_successfully
    # Prevent Docker from timing out on long-running import
    stop_grace_period: 300s
    healthcheck:
      disable: true  # Disable health checks for long-running import
    entrypoint: ["python", "-m", "backend.analytics_importer"]

  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: analytics-api-gateway-dev
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"  # Expose for development access
    volumes:
      - ./logs:/app/logs
      - .:/app  # Mount source code for development
    environment:

      RUNNING_ENV: development

      DB_ALLOW_AUTO_CREATE_DB: "false"
      DB_ALLOW_AUTO_CREATE_TABLES: "false"
    depends_on:
      db:
        condition: service_healthy
      db-init-tables:
        condition: service_completed_successfully

  client-ui:
    build:
      context: .
      dockerfile: Dockerfile.client-ui-naive
    container_name: analytics-client-ui-dev
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - api_gateway

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: analytics-scheduler-dev
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - .:/app  # Mount source code for development
    command: python backend/analytics/sim_scheduler.py
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      db-init-tables:
        condition: service_completed_successfully
      import-historical-bars:
        condition: service_completed_successfully
    environment:

      RUNNING_ENV: development


      DB_ALLOW_AUTO_CREATE_DB: "false"
      DB_ALLOW_AUTO_CREATE_TABLES: "false"
      SIM_PACE_SECONDS: "0"
      SIM_STEP_SECONDS: "300"
      SIM_SYMBOL_LIMIT: "10"

networks:
  default:
    name: selftrading_analytics_dev
